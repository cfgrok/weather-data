require 'csv'
require 'pry'

class Reading < Sequel::Model

  def self.import_data(directory)
    files = self.list_data_files directory
    
    files.each do |file|
      data = CSV.read "#{directory}/#{file}", headers: true
      station_code = File.basename file, '.csv'
      city_id = City.find(station_code: station_code).id
      rows = data.to_a.map { |row| row.drop(1).prepend(city_id) }.drop(1).reject { |row| row.index 'NA' }
      self.import [:city_id, :date, :max_temp, :min_temp, :precip], rows
    rescue => e
      binding.pry
    end
  end

  def self.list_data_files(directory)
    Dir.glob 'US*.csv', base: directory, sort: true
  end

end

# Table: readings
# Columns:
#  id       | integer          | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  city_id  | integer          | NOT NULL
#  date     | date             |
#  max_temp | double precision |
#  min_temp | double precision |
#  precip   | double precision |
# Indexes:
#  readings_pkey | PRIMARY KEY btree (id)
# Foreign key constraints:
#  readings_city_id_fkey | (city_id) REFERENCES cities(id)
